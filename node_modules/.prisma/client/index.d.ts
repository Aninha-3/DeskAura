
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Simulacao
 * 
 */
export type Simulacao = $Result.DefaultSelection<Prisma.$SimulacaoPayload>
/**
 * Model HistoricoSimulacao
 * 
 */
export type HistoricoSimulacao = $Result.DefaultSelection<Prisma.$HistoricoSimulacaoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.simulacao`: Exposes CRUD operations for the **Simulacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Simulacaos
    * const simulacaos = await prisma.simulacao.findMany()
    * ```
    */
  get simulacao(): Prisma.SimulacaoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.historicoSimulacao`: Exposes CRUD operations for the **HistoricoSimulacao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistoricoSimulacaos
    * const historicoSimulacaos = await prisma.historicoSimulacao.findMany()
    * ```
    */
  get historicoSimulacao(): Prisma.HistoricoSimulacaoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.15.0
   * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Simulacao: 'Simulacao',
    HistoricoSimulacao: 'HistoricoSimulacao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "simulacao" | "historicoSimulacao"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Simulacao: {
        payload: Prisma.$SimulacaoPayload<ExtArgs>
        fields: Prisma.SimulacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SimulacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SimulacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          findFirst: {
            args: Prisma.SimulacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SimulacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          findMany: {
            args: Prisma.SimulacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>[]
          }
          create: {
            args: Prisma.SimulacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          createMany: {
            args: Prisma.SimulacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SimulacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          update: {
            args: Prisma.SimulacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          deleteMany: {
            args: Prisma.SimulacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SimulacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SimulacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SimulacaoPayload>
          }
          aggregate: {
            args: Prisma.SimulacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSimulacao>
          }
          groupBy: {
            args: Prisma.SimulacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<SimulacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.SimulacaoCountArgs<ExtArgs>
            result: $Utils.Optional<SimulacaoCountAggregateOutputType> | number
          }
        }
      }
      HistoricoSimulacao: {
        payload: Prisma.$HistoricoSimulacaoPayload<ExtArgs>
        fields: Prisma.HistoricoSimulacaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistoricoSimulacaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistoricoSimulacaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          findFirst: {
            args: Prisma.HistoricoSimulacaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistoricoSimulacaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          findMany: {
            args: Prisma.HistoricoSimulacaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>[]
          }
          create: {
            args: Prisma.HistoricoSimulacaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          createMany: {
            args: Prisma.HistoricoSimulacaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.HistoricoSimulacaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          update: {
            args: Prisma.HistoricoSimulacaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          deleteMany: {
            args: Prisma.HistoricoSimulacaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistoricoSimulacaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistoricoSimulacaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistoricoSimulacaoPayload>
          }
          aggregate: {
            args: Prisma.HistoricoSimulacaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistoricoSimulacao>
          }
          groupBy: {
            args: Prisma.HistoricoSimulacaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistoricoSimulacaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistoricoSimulacaoCountArgs<ExtArgs>
            result: $Utils.Optional<HistoricoSimulacaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    simulacao?: SimulacaoOmit
    historicoSimulacao?: HistoricoSimulacaoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    simulacoes: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulacoes?: boolean | UsuarioCountOutputTypeCountSimulacoesArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountSimulacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SimulacaoWhereInput
  }


  /**
   * Count Type SimulacaoCountOutputType
   */

  export type SimulacaoCountOutputType = {
    historico: number
  }

  export type SimulacaoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historico?: boolean | SimulacaoCountOutputTypeCountHistoricoArgs
  }

  // Custom InputTypes
  /**
   * SimulacaoCountOutputType without action
   */
  export type SimulacaoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SimulacaoCountOutputType
     */
    select?: SimulacaoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SimulacaoCountOutputType without action
   */
  export type SimulacaoCountOutputTypeCountHistoricoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoricoSimulacaoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: string | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    data_cadastro: Date | null
    ultimo_login: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: string | null
    nome: string | null
    email: string | null
    senha_hash: string | null
    data_cadastro: Date | null
    ultimo_login: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nome: number
    email: number
    senha_hash: number
    data_cadastro: number
    ultimo_login: number
    _all: number
  }


  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    data_cadastro?: true
    ultimo_login?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    data_cadastro?: true
    ultimo_login?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nome?: true
    email?: true
    senha_hash?: true
    data_cadastro?: true
    ultimo_login?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro: Date
    ultimo_login: Date | null
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    data_cadastro?: boolean
    ultimo_login?: boolean
    simulacoes?: boolean | Usuario$simulacoesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>



  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    nome?: boolean
    email?: boolean
    senha_hash?: boolean
    data_cadastro?: boolean
    ultimo_login?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nome" | "email" | "senha_hash" | "data_cadastro" | "ultimo_login", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulacoes?: boolean | Usuario$simulacoesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      simulacoes: Prisma.$SimulacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: string
      nome: string
      email: string
      senha_hash: string
      data_cadastro: Date
      ultimo_login: Date | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    simulacoes<T extends Usuario$simulacoesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$simulacoesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'String'>
    readonly nome: FieldRef<"Usuario", 'String'>
    readonly email: FieldRef<"Usuario", 'String'>
    readonly senha_hash: FieldRef<"Usuario", 'String'>
    readonly data_cadastro: FieldRef<"Usuario", 'DateTime'>
    readonly ultimo_login: FieldRef<"Usuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.simulacoes
   */
  export type Usuario$simulacoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    where?: SimulacaoWhereInput
    orderBy?: SimulacaoOrderByWithRelationInput | SimulacaoOrderByWithRelationInput[]
    cursor?: SimulacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SimulacaoScalarFieldEnum | SimulacaoScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Simulacao
   */

  export type AggregateSimulacao = {
    _count: SimulacaoCountAggregateOutputType | null
    _min: SimulacaoMinAggregateOutputType | null
    _max: SimulacaoMaxAggregateOutputType | null
  }

  export type SimulacaoMinAggregateOutputType = {
    id_simulacao: string | null
    titulo: string | null
    data_execucao: Date | null
    id_usuario: string | null
  }

  export type SimulacaoMaxAggregateOutputType = {
    id_simulacao: string | null
    titulo: string | null
    data_execucao: Date | null
    id_usuario: string | null
  }

  export type SimulacaoCountAggregateOutputType = {
    id_simulacao: number
    titulo: number
    parametros: number
    resultado: number
    data_execucao: number
    id_usuario: number
    _all: number
  }


  export type SimulacaoMinAggregateInputType = {
    id_simulacao?: true
    titulo?: true
    data_execucao?: true
    id_usuario?: true
  }

  export type SimulacaoMaxAggregateInputType = {
    id_simulacao?: true
    titulo?: true
    data_execucao?: true
    id_usuario?: true
  }

  export type SimulacaoCountAggregateInputType = {
    id_simulacao?: true
    titulo?: true
    parametros?: true
    resultado?: true
    data_execucao?: true
    id_usuario?: true
    _all?: true
  }

  export type SimulacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Simulacao to aggregate.
     */
    where?: SimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacaos to fetch.
     */
    orderBy?: SimulacaoOrderByWithRelationInput | SimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Simulacaos
    **/
    _count?: true | SimulacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SimulacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SimulacaoMaxAggregateInputType
  }

  export type GetSimulacaoAggregateType<T extends SimulacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateSimulacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSimulacao[P]>
      : GetScalarType<T[P], AggregateSimulacao[P]>
  }




  export type SimulacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SimulacaoWhereInput
    orderBy?: SimulacaoOrderByWithAggregationInput | SimulacaoOrderByWithAggregationInput[]
    by: SimulacaoScalarFieldEnum[] | SimulacaoScalarFieldEnum
    having?: SimulacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SimulacaoCountAggregateInputType | true
    _min?: SimulacaoMinAggregateInputType
    _max?: SimulacaoMaxAggregateInputType
  }

  export type SimulacaoGroupByOutputType = {
    id_simulacao: string
    titulo: string
    parametros: JsonValue
    resultado: JsonValue
    data_execucao: Date
    id_usuario: string
    _count: SimulacaoCountAggregateOutputType | null
    _min: SimulacaoMinAggregateOutputType | null
    _max: SimulacaoMaxAggregateOutputType | null
  }

  type GetSimulacaoGroupByPayload<T extends SimulacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SimulacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SimulacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SimulacaoGroupByOutputType[P]>
            : GetScalarType<T[P], SimulacaoGroupByOutputType[P]>
        }
      >
    >


  export type SimulacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_simulacao?: boolean
    titulo?: boolean
    parametros?: boolean
    resultado?: boolean
    data_execucao?: boolean
    id_usuario?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    historico?: boolean | Simulacao$historicoArgs<ExtArgs>
    _count?: boolean | SimulacaoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["simulacao"]>



  export type SimulacaoSelectScalar = {
    id_simulacao?: boolean
    titulo?: boolean
    parametros?: boolean
    resultado?: boolean
    data_execucao?: boolean
    id_usuario?: boolean
  }

  export type SimulacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_simulacao" | "titulo" | "parametros" | "resultado" | "data_execucao" | "id_usuario", ExtArgs["result"]["simulacao"]>
  export type SimulacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    historico?: boolean | Simulacao$historicoArgs<ExtArgs>
    _count?: boolean | SimulacaoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SimulacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Simulacao"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      historico: Prisma.$HistoricoSimulacaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_simulacao: string
      titulo: string
      parametros: Prisma.JsonValue
      resultado: Prisma.JsonValue
      data_execucao: Date
      id_usuario: string
    }, ExtArgs["result"]["simulacao"]>
    composites: {}
  }

  type SimulacaoGetPayload<S extends boolean | null | undefined | SimulacaoDefaultArgs> = $Result.GetResult<Prisma.$SimulacaoPayload, S>

  type SimulacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SimulacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SimulacaoCountAggregateInputType | true
    }

  export interface SimulacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Simulacao'], meta: { name: 'Simulacao' } }
    /**
     * Find zero or one Simulacao that matches the filter.
     * @param {SimulacaoFindUniqueArgs} args - Arguments to find a Simulacao
     * @example
     * // Get one Simulacao
     * const simulacao = await prisma.simulacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SimulacaoFindUniqueArgs>(args: SelectSubset<T, SimulacaoFindUniqueArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Simulacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SimulacaoFindUniqueOrThrowArgs} args - Arguments to find a Simulacao
     * @example
     * // Get one Simulacao
     * const simulacao = await prisma.simulacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SimulacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, SimulacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Simulacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoFindFirstArgs} args - Arguments to find a Simulacao
     * @example
     * // Get one Simulacao
     * const simulacao = await prisma.simulacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SimulacaoFindFirstArgs>(args?: SelectSubset<T, SimulacaoFindFirstArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Simulacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoFindFirstOrThrowArgs} args - Arguments to find a Simulacao
     * @example
     * // Get one Simulacao
     * const simulacao = await prisma.simulacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SimulacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, SimulacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Simulacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Simulacaos
     * const simulacaos = await prisma.simulacao.findMany()
     * 
     * // Get first 10 Simulacaos
     * const simulacaos = await prisma.simulacao.findMany({ take: 10 })
     * 
     * // Only select the `id_simulacao`
     * const simulacaoWithId_simulacaoOnly = await prisma.simulacao.findMany({ select: { id_simulacao: true } })
     * 
     */
    findMany<T extends SimulacaoFindManyArgs>(args?: SelectSubset<T, SimulacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Simulacao.
     * @param {SimulacaoCreateArgs} args - Arguments to create a Simulacao.
     * @example
     * // Create one Simulacao
     * const Simulacao = await prisma.simulacao.create({
     *   data: {
     *     // ... data to create a Simulacao
     *   }
     * })
     * 
     */
    create<T extends SimulacaoCreateArgs>(args: SelectSubset<T, SimulacaoCreateArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Simulacaos.
     * @param {SimulacaoCreateManyArgs} args - Arguments to create many Simulacaos.
     * @example
     * // Create many Simulacaos
     * const simulacao = await prisma.simulacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SimulacaoCreateManyArgs>(args?: SelectSubset<T, SimulacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Simulacao.
     * @param {SimulacaoDeleteArgs} args - Arguments to delete one Simulacao.
     * @example
     * // Delete one Simulacao
     * const Simulacao = await prisma.simulacao.delete({
     *   where: {
     *     // ... filter to delete one Simulacao
     *   }
     * })
     * 
     */
    delete<T extends SimulacaoDeleteArgs>(args: SelectSubset<T, SimulacaoDeleteArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Simulacao.
     * @param {SimulacaoUpdateArgs} args - Arguments to update one Simulacao.
     * @example
     * // Update one Simulacao
     * const simulacao = await prisma.simulacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SimulacaoUpdateArgs>(args: SelectSubset<T, SimulacaoUpdateArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Simulacaos.
     * @param {SimulacaoDeleteManyArgs} args - Arguments to filter Simulacaos to delete.
     * @example
     * // Delete a few Simulacaos
     * const { count } = await prisma.simulacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SimulacaoDeleteManyArgs>(args?: SelectSubset<T, SimulacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Simulacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Simulacaos
     * const simulacao = await prisma.simulacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SimulacaoUpdateManyArgs>(args: SelectSubset<T, SimulacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Simulacao.
     * @param {SimulacaoUpsertArgs} args - Arguments to update or create a Simulacao.
     * @example
     * // Update or create a Simulacao
     * const simulacao = await prisma.simulacao.upsert({
     *   create: {
     *     // ... data to create a Simulacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Simulacao we want to update
     *   }
     * })
     */
    upsert<T extends SimulacaoUpsertArgs>(args: SelectSubset<T, SimulacaoUpsertArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Simulacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoCountArgs} args - Arguments to filter Simulacaos to count.
     * @example
     * // Count the number of Simulacaos
     * const count = await prisma.simulacao.count({
     *   where: {
     *     // ... the filter for the Simulacaos we want to count
     *   }
     * })
    **/
    count<T extends SimulacaoCountArgs>(
      args?: Subset<T, SimulacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SimulacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Simulacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SimulacaoAggregateArgs>(args: Subset<T, SimulacaoAggregateArgs>): Prisma.PrismaPromise<GetSimulacaoAggregateType<T>>

    /**
     * Group by Simulacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SimulacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SimulacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SimulacaoGroupByArgs['orderBy'] }
        : { orderBy?: SimulacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SimulacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSimulacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Simulacao model
   */
  readonly fields: SimulacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Simulacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SimulacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    historico<T extends Simulacao$historicoArgs<ExtArgs> = {}>(args?: Subset<T, Simulacao$historicoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Simulacao model
   */
  interface SimulacaoFieldRefs {
    readonly id_simulacao: FieldRef<"Simulacao", 'String'>
    readonly titulo: FieldRef<"Simulacao", 'String'>
    readonly parametros: FieldRef<"Simulacao", 'Json'>
    readonly resultado: FieldRef<"Simulacao", 'Json'>
    readonly data_execucao: FieldRef<"Simulacao", 'DateTime'>
    readonly id_usuario: FieldRef<"Simulacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Simulacao findUnique
   */
  export type SimulacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which Simulacao to fetch.
     */
    where: SimulacaoWhereUniqueInput
  }

  /**
   * Simulacao findUniqueOrThrow
   */
  export type SimulacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which Simulacao to fetch.
     */
    where: SimulacaoWhereUniqueInput
  }

  /**
   * Simulacao findFirst
   */
  export type SimulacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which Simulacao to fetch.
     */
    where?: SimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacaos to fetch.
     */
    orderBy?: SimulacaoOrderByWithRelationInput | SimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Simulacaos.
     */
    cursor?: SimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Simulacaos.
     */
    distinct?: SimulacaoScalarFieldEnum | SimulacaoScalarFieldEnum[]
  }

  /**
   * Simulacao findFirstOrThrow
   */
  export type SimulacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which Simulacao to fetch.
     */
    where?: SimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacaos to fetch.
     */
    orderBy?: SimulacaoOrderByWithRelationInput | SimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Simulacaos.
     */
    cursor?: SimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Simulacaos.
     */
    distinct?: SimulacaoScalarFieldEnum | SimulacaoScalarFieldEnum[]
  }

  /**
   * Simulacao findMany
   */
  export type SimulacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which Simulacaos to fetch.
     */
    where?: SimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Simulacaos to fetch.
     */
    orderBy?: SimulacaoOrderByWithRelationInput | SimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Simulacaos.
     */
    cursor?: SimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Simulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Simulacaos.
     */
    skip?: number
    distinct?: SimulacaoScalarFieldEnum | SimulacaoScalarFieldEnum[]
  }

  /**
   * Simulacao create
   */
  export type SimulacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Simulacao.
     */
    data: XOR<SimulacaoCreateInput, SimulacaoUncheckedCreateInput>
  }

  /**
   * Simulacao createMany
   */
  export type SimulacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Simulacaos.
     */
    data: SimulacaoCreateManyInput | SimulacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Simulacao update
   */
  export type SimulacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Simulacao.
     */
    data: XOR<SimulacaoUpdateInput, SimulacaoUncheckedUpdateInput>
    /**
     * Choose, which Simulacao to update.
     */
    where: SimulacaoWhereUniqueInput
  }

  /**
   * Simulacao updateMany
   */
  export type SimulacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Simulacaos.
     */
    data: XOR<SimulacaoUpdateManyMutationInput, SimulacaoUncheckedUpdateManyInput>
    /**
     * Filter which Simulacaos to update
     */
    where?: SimulacaoWhereInput
    /**
     * Limit how many Simulacaos to update.
     */
    limit?: number
  }

  /**
   * Simulacao upsert
   */
  export type SimulacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Simulacao to update in case it exists.
     */
    where: SimulacaoWhereUniqueInput
    /**
     * In case the Simulacao found by the `where` argument doesn't exist, create a new Simulacao with this data.
     */
    create: XOR<SimulacaoCreateInput, SimulacaoUncheckedCreateInput>
    /**
     * In case the Simulacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SimulacaoUpdateInput, SimulacaoUncheckedUpdateInput>
  }

  /**
   * Simulacao delete
   */
  export type SimulacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
    /**
     * Filter which Simulacao to delete.
     */
    where: SimulacaoWhereUniqueInput
  }

  /**
   * Simulacao deleteMany
   */
  export type SimulacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Simulacaos to delete
     */
    where?: SimulacaoWhereInput
    /**
     * Limit how many Simulacaos to delete.
     */
    limit?: number
  }

  /**
   * Simulacao.historico
   */
  export type Simulacao$historicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    where?: HistoricoSimulacaoWhereInput
    orderBy?: HistoricoSimulacaoOrderByWithRelationInput | HistoricoSimulacaoOrderByWithRelationInput[]
    cursor?: HistoricoSimulacaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistoricoSimulacaoScalarFieldEnum | HistoricoSimulacaoScalarFieldEnum[]
  }

  /**
   * Simulacao without action
   */
  export type SimulacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Simulacao
     */
    select?: SimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Simulacao
     */
    omit?: SimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SimulacaoInclude<ExtArgs> | null
  }


  /**
   * Model HistoricoSimulacao
   */

  export type AggregateHistoricoSimulacao = {
    _count: HistoricoSimulacaoCountAggregateOutputType | null
    _min: HistoricoSimulacaoMinAggregateOutputType | null
    _max: HistoricoSimulacaoMaxAggregateOutputType | null
  }

  export type HistoricoSimulacaoMinAggregateOutputType = {
    id_historico: string | null
    acao: string | null
    data_acao: Date | null
    detalhes: string | null
    id_simulacao: string | null
  }

  export type HistoricoSimulacaoMaxAggregateOutputType = {
    id_historico: string | null
    acao: string | null
    data_acao: Date | null
    detalhes: string | null
    id_simulacao: string | null
  }

  export type HistoricoSimulacaoCountAggregateOutputType = {
    id_historico: number
    acao: number
    data_acao: number
    detalhes: number
    id_simulacao: number
    _all: number
  }


  export type HistoricoSimulacaoMinAggregateInputType = {
    id_historico?: true
    acao?: true
    data_acao?: true
    detalhes?: true
    id_simulacao?: true
  }

  export type HistoricoSimulacaoMaxAggregateInputType = {
    id_historico?: true
    acao?: true
    data_acao?: true
    detalhes?: true
    id_simulacao?: true
  }

  export type HistoricoSimulacaoCountAggregateInputType = {
    id_historico?: true
    acao?: true
    data_acao?: true
    detalhes?: true
    id_simulacao?: true
    _all?: true
  }

  export type HistoricoSimulacaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistoricoSimulacao to aggregate.
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoricoSimulacaos to fetch.
     */
    orderBy?: HistoricoSimulacaoOrderByWithRelationInput | HistoricoSimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistoricoSimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoricoSimulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoricoSimulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistoricoSimulacaos
    **/
    _count?: true | HistoricoSimulacaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistoricoSimulacaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistoricoSimulacaoMaxAggregateInputType
  }

  export type GetHistoricoSimulacaoAggregateType<T extends HistoricoSimulacaoAggregateArgs> = {
        [P in keyof T & keyof AggregateHistoricoSimulacao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistoricoSimulacao[P]>
      : GetScalarType<T[P], AggregateHistoricoSimulacao[P]>
  }




  export type HistoricoSimulacaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistoricoSimulacaoWhereInput
    orderBy?: HistoricoSimulacaoOrderByWithAggregationInput | HistoricoSimulacaoOrderByWithAggregationInput[]
    by: HistoricoSimulacaoScalarFieldEnum[] | HistoricoSimulacaoScalarFieldEnum
    having?: HistoricoSimulacaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistoricoSimulacaoCountAggregateInputType | true
    _min?: HistoricoSimulacaoMinAggregateInputType
    _max?: HistoricoSimulacaoMaxAggregateInputType
  }

  export type HistoricoSimulacaoGroupByOutputType = {
    id_historico: string
    acao: string
    data_acao: Date
    detalhes: string | null
    id_simulacao: string
    _count: HistoricoSimulacaoCountAggregateOutputType | null
    _min: HistoricoSimulacaoMinAggregateOutputType | null
    _max: HistoricoSimulacaoMaxAggregateOutputType | null
  }

  type GetHistoricoSimulacaoGroupByPayload<T extends HistoricoSimulacaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistoricoSimulacaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistoricoSimulacaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistoricoSimulacaoGroupByOutputType[P]>
            : GetScalarType<T[P], HistoricoSimulacaoGroupByOutputType[P]>
        }
      >
    >


  export type HistoricoSimulacaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_historico?: boolean
    acao?: boolean
    data_acao?: boolean
    detalhes?: boolean
    id_simulacao?: boolean
    simulacao?: boolean | SimulacaoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historicoSimulacao"]>



  export type HistoricoSimulacaoSelectScalar = {
    id_historico?: boolean
    acao?: boolean
    data_acao?: boolean
    detalhes?: boolean
    id_simulacao?: boolean
  }

  export type HistoricoSimulacaoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_historico" | "acao" | "data_acao" | "detalhes" | "id_simulacao", ExtArgs["result"]["historicoSimulacao"]>
  export type HistoricoSimulacaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    simulacao?: boolean | SimulacaoDefaultArgs<ExtArgs>
  }

  export type $HistoricoSimulacaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistoricoSimulacao"
    objects: {
      simulacao: Prisma.$SimulacaoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_historico: string
      acao: string
      data_acao: Date
      detalhes: string | null
      id_simulacao: string
    }, ExtArgs["result"]["historicoSimulacao"]>
    composites: {}
  }

  type HistoricoSimulacaoGetPayload<S extends boolean | null | undefined | HistoricoSimulacaoDefaultArgs> = $Result.GetResult<Prisma.$HistoricoSimulacaoPayload, S>

  type HistoricoSimulacaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HistoricoSimulacaoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HistoricoSimulacaoCountAggregateInputType | true
    }

  export interface HistoricoSimulacaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistoricoSimulacao'], meta: { name: 'HistoricoSimulacao' } }
    /**
     * Find zero or one HistoricoSimulacao that matches the filter.
     * @param {HistoricoSimulacaoFindUniqueArgs} args - Arguments to find a HistoricoSimulacao
     * @example
     * // Get one HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistoricoSimulacaoFindUniqueArgs>(args: SelectSubset<T, HistoricoSimulacaoFindUniqueArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HistoricoSimulacao that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HistoricoSimulacaoFindUniqueOrThrowArgs} args - Arguments to find a HistoricoSimulacao
     * @example
     * // Get one HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistoricoSimulacaoFindUniqueOrThrowArgs>(args: SelectSubset<T, HistoricoSimulacaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistoricoSimulacao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoFindFirstArgs} args - Arguments to find a HistoricoSimulacao
     * @example
     * // Get one HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistoricoSimulacaoFindFirstArgs>(args?: SelectSubset<T, HistoricoSimulacaoFindFirstArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HistoricoSimulacao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoFindFirstOrThrowArgs} args - Arguments to find a HistoricoSimulacao
     * @example
     * // Get one HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistoricoSimulacaoFindFirstOrThrowArgs>(args?: SelectSubset<T, HistoricoSimulacaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HistoricoSimulacaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistoricoSimulacaos
     * const historicoSimulacaos = await prisma.historicoSimulacao.findMany()
     * 
     * // Get first 10 HistoricoSimulacaos
     * const historicoSimulacaos = await prisma.historicoSimulacao.findMany({ take: 10 })
     * 
     * // Only select the `id_historico`
     * const historicoSimulacaoWithId_historicoOnly = await prisma.historicoSimulacao.findMany({ select: { id_historico: true } })
     * 
     */
    findMany<T extends HistoricoSimulacaoFindManyArgs>(args?: SelectSubset<T, HistoricoSimulacaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HistoricoSimulacao.
     * @param {HistoricoSimulacaoCreateArgs} args - Arguments to create a HistoricoSimulacao.
     * @example
     * // Create one HistoricoSimulacao
     * const HistoricoSimulacao = await prisma.historicoSimulacao.create({
     *   data: {
     *     // ... data to create a HistoricoSimulacao
     *   }
     * })
     * 
     */
    create<T extends HistoricoSimulacaoCreateArgs>(args: SelectSubset<T, HistoricoSimulacaoCreateArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HistoricoSimulacaos.
     * @param {HistoricoSimulacaoCreateManyArgs} args - Arguments to create many HistoricoSimulacaos.
     * @example
     * // Create many HistoricoSimulacaos
     * const historicoSimulacao = await prisma.historicoSimulacao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistoricoSimulacaoCreateManyArgs>(args?: SelectSubset<T, HistoricoSimulacaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a HistoricoSimulacao.
     * @param {HistoricoSimulacaoDeleteArgs} args - Arguments to delete one HistoricoSimulacao.
     * @example
     * // Delete one HistoricoSimulacao
     * const HistoricoSimulacao = await prisma.historicoSimulacao.delete({
     *   where: {
     *     // ... filter to delete one HistoricoSimulacao
     *   }
     * })
     * 
     */
    delete<T extends HistoricoSimulacaoDeleteArgs>(args: SelectSubset<T, HistoricoSimulacaoDeleteArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HistoricoSimulacao.
     * @param {HistoricoSimulacaoUpdateArgs} args - Arguments to update one HistoricoSimulacao.
     * @example
     * // Update one HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistoricoSimulacaoUpdateArgs>(args: SelectSubset<T, HistoricoSimulacaoUpdateArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HistoricoSimulacaos.
     * @param {HistoricoSimulacaoDeleteManyArgs} args - Arguments to filter HistoricoSimulacaos to delete.
     * @example
     * // Delete a few HistoricoSimulacaos
     * const { count } = await prisma.historicoSimulacao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistoricoSimulacaoDeleteManyArgs>(args?: SelectSubset<T, HistoricoSimulacaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistoricoSimulacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistoricoSimulacaos
     * const historicoSimulacao = await prisma.historicoSimulacao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistoricoSimulacaoUpdateManyArgs>(args: SelectSubset<T, HistoricoSimulacaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistoricoSimulacao.
     * @param {HistoricoSimulacaoUpsertArgs} args - Arguments to update or create a HistoricoSimulacao.
     * @example
     * // Update or create a HistoricoSimulacao
     * const historicoSimulacao = await prisma.historicoSimulacao.upsert({
     *   create: {
     *     // ... data to create a HistoricoSimulacao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistoricoSimulacao we want to update
     *   }
     * })
     */
    upsert<T extends HistoricoSimulacaoUpsertArgs>(args: SelectSubset<T, HistoricoSimulacaoUpsertArgs<ExtArgs>>): Prisma__HistoricoSimulacaoClient<$Result.GetResult<Prisma.$HistoricoSimulacaoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HistoricoSimulacaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoCountArgs} args - Arguments to filter HistoricoSimulacaos to count.
     * @example
     * // Count the number of HistoricoSimulacaos
     * const count = await prisma.historicoSimulacao.count({
     *   where: {
     *     // ... the filter for the HistoricoSimulacaos we want to count
     *   }
     * })
    **/
    count<T extends HistoricoSimulacaoCountArgs>(
      args?: Subset<T, HistoricoSimulacaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistoricoSimulacaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistoricoSimulacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistoricoSimulacaoAggregateArgs>(args: Subset<T, HistoricoSimulacaoAggregateArgs>): Prisma.PrismaPromise<GetHistoricoSimulacaoAggregateType<T>>

    /**
     * Group by HistoricoSimulacao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistoricoSimulacaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistoricoSimulacaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistoricoSimulacaoGroupByArgs['orderBy'] }
        : { orderBy?: HistoricoSimulacaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistoricoSimulacaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistoricoSimulacaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistoricoSimulacao model
   */
  readonly fields: HistoricoSimulacaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistoricoSimulacao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistoricoSimulacaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    simulacao<T extends SimulacaoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SimulacaoDefaultArgs<ExtArgs>>): Prisma__SimulacaoClient<$Result.GetResult<Prisma.$SimulacaoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistoricoSimulacao model
   */
  interface HistoricoSimulacaoFieldRefs {
    readonly id_historico: FieldRef<"HistoricoSimulacao", 'String'>
    readonly acao: FieldRef<"HistoricoSimulacao", 'String'>
    readonly data_acao: FieldRef<"HistoricoSimulacao", 'DateTime'>
    readonly detalhes: FieldRef<"HistoricoSimulacao", 'String'>
    readonly id_simulacao: FieldRef<"HistoricoSimulacao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * HistoricoSimulacao findUnique
   */
  export type HistoricoSimulacaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which HistoricoSimulacao to fetch.
     */
    where: HistoricoSimulacaoWhereUniqueInput
  }

  /**
   * HistoricoSimulacao findUniqueOrThrow
   */
  export type HistoricoSimulacaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which HistoricoSimulacao to fetch.
     */
    where: HistoricoSimulacaoWhereUniqueInput
  }

  /**
   * HistoricoSimulacao findFirst
   */
  export type HistoricoSimulacaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which HistoricoSimulacao to fetch.
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoricoSimulacaos to fetch.
     */
    orderBy?: HistoricoSimulacaoOrderByWithRelationInput | HistoricoSimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistoricoSimulacaos.
     */
    cursor?: HistoricoSimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoricoSimulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoricoSimulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistoricoSimulacaos.
     */
    distinct?: HistoricoSimulacaoScalarFieldEnum | HistoricoSimulacaoScalarFieldEnum[]
  }

  /**
   * HistoricoSimulacao findFirstOrThrow
   */
  export type HistoricoSimulacaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which HistoricoSimulacao to fetch.
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoricoSimulacaos to fetch.
     */
    orderBy?: HistoricoSimulacaoOrderByWithRelationInput | HistoricoSimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistoricoSimulacaos.
     */
    cursor?: HistoricoSimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoricoSimulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoricoSimulacaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistoricoSimulacaos.
     */
    distinct?: HistoricoSimulacaoScalarFieldEnum | HistoricoSimulacaoScalarFieldEnum[]
  }

  /**
   * HistoricoSimulacao findMany
   */
  export type HistoricoSimulacaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter, which HistoricoSimulacaos to fetch.
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistoricoSimulacaos to fetch.
     */
    orderBy?: HistoricoSimulacaoOrderByWithRelationInput | HistoricoSimulacaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistoricoSimulacaos.
     */
    cursor?: HistoricoSimulacaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistoricoSimulacaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistoricoSimulacaos.
     */
    skip?: number
    distinct?: HistoricoSimulacaoScalarFieldEnum | HistoricoSimulacaoScalarFieldEnum[]
  }

  /**
   * HistoricoSimulacao create
   */
  export type HistoricoSimulacaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * The data needed to create a HistoricoSimulacao.
     */
    data: XOR<HistoricoSimulacaoCreateInput, HistoricoSimulacaoUncheckedCreateInput>
  }

  /**
   * HistoricoSimulacao createMany
   */
  export type HistoricoSimulacaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistoricoSimulacaos.
     */
    data: HistoricoSimulacaoCreateManyInput | HistoricoSimulacaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistoricoSimulacao update
   */
  export type HistoricoSimulacaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * The data needed to update a HistoricoSimulacao.
     */
    data: XOR<HistoricoSimulacaoUpdateInput, HistoricoSimulacaoUncheckedUpdateInput>
    /**
     * Choose, which HistoricoSimulacao to update.
     */
    where: HistoricoSimulacaoWhereUniqueInput
  }

  /**
   * HistoricoSimulacao updateMany
   */
  export type HistoricoSimulacaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistoricoSimulacaos.
     */
    data: XOR<HistoricoSimulacaoUpdateManyMutationInput, HistoricoSimulacaoUncheckedUpdateManyInput>
    /**
     * Filter which HistoricoSimulacaos to update
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * Limit how many HistoricoSimulacaos to update.
     */
    limit?: number
  }

  /**
   * HistoricoSimulacao upsert
   */
  export type HistoricoSimulacaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * The filter to search for the HistoricoSimulacao to update in case it exists.
     */
    where: HistoricoSimulacaoWhereUniqueInput
    /**
     * In case the HistoricoSimulacao found by the `where` argument doesn't exist, create a new HistoricoSimulacao with this data.
     */
    create: XOR<HistoricoSimulacaoCreateInput, HistoricoSimulacaoUncheckedCreateInput>
    /**
     * In case the HistoricoSimulacao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistoricoSimulacaoUpdateInput, HistoricoSimulacaoUncheckedUpdateInput>
  }

  /**
   * HistoricoSimulacao delete
   */
  export type HistoricoSimulacaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
    /**
     * Filter which HistoricoSimulacao to delete.
     */
    where: HistoricoSimulacaoWhereUniqueInput
  }

  /**
   * HistoricoSimulacao deleteMany
   */
  export type HistoricoSimulacaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistoricoSimulacaos to delete
     */
    where?: HistoricoSimulacaoWhereInput
    /**
     * Limit how many HistoricoSimulacaos to delete.
     */
    limit?: number
  }

  /**
   * HistoricoSimulacao without action
   */
  export type HistoricoSimulacaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistoricoSimulacao
     */
    select?: HistoricoSimulacaoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HistoricoSimulacao
     */
    omit?: HistoricoSimulacaoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistoricoSimulacaoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    email: 'email',
    senha_hash: 'senha_hash',
    data_cadastro: 'data_cadastro',
    ultimo_login: 'ultimo_login'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const SimulacaoScalarFieldEnum: {
    id_simulacao: 'id_simulacao',
    titulo: 'titulo',
    parametros: 'parametros',
    resultado: 'resultado',
    data_execucao: 'data_execucao',
    id_usuario: 'id_usuario'
  };

  export type SimulacaoScalarFieldEnum = (typeof SimulacaoScalarFieldEnum)[keyof typeof SimulacaoScalarFieldEnum]


  export const HistoricoSimulacaoScalarFieldEnum: {
    id_historico: 'id_historico',
    acao: 'acao',
    data_acao: 'data_acao',
    detalhes: 'detalhes',
    id_simulacao: 'id_simulacao'
  };

  export type HistoricoSimulacaoScalarFieldEnum = (typeof HistoricoSimulacaoScalarFieldEnum)[keyof typeof HistoricoSimulacaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UsuarioOrderByRelevanceFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    email: 'email',
    senha_hash: 'senha_hash'
  };

  export type UsuarioOrderByRelevanceFieldEnum = (typeof UsuarioOrderByRelevanceFieldEnum)[keyof typeof UsuarioOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const SimulacaoOrderByRelevanceFieldEnum: {
    id_simulacao: 'id_simulacao',
    titulo: 'titulo',
    id_usuario: 'id_usuario'
  };

  export type SimulacaoOrderByRelevanceFieldEnum = (typeof SimulacaoOrderByRelevanceFieldEnum)[keyof typeof SimulacaoOrderByRelevanceFieldEnum]


  export const HistoricoSimulacaoOrderByRelevanceFieldEnum: {
    id_historico: 'id_historico',
    acao: 'acao',
    detalhes: 'detalhes',
    id_simulacao: 'id_simulacao'
  };

  export type HistoricoSimulacaoOrderByRelevanceFieldEnum = (typeof HistoricoSimulacaoOrderByRelevanceFieldEnum)[keyof typeof HistoricoSimulacaoOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: StringFilter<"Usuario"> | string
    nome?: StringFilter<"Usuario"> | string
    email?: StringFilter<"Usuario"> | string
    senha_hash?: StringFilter<"Usuario"> | string
    data_cadastro?: DateTimeFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    simulacoes?: SimulacaoListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    data_cadastro?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    simulacoes?: SimulacaoOrderByRelationAggregateInput
    _relevance?: UsuarioOrderByRelevanceInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: string
    email?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nome?: StringFilter<"Usuario"> | string
    senha_hash?: StringFilter<"Usuario"> | string
    data_cadastro?: DateTimeFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableFilter<"Usuario"> | Date | string | null
    simulacoes?: SimulacaoListRelationFilter
  }, "id_usuario" | "email">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    data_cadastro?: SortOrder
    ultimo_login?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: StringWithAggregatesFilter<"Usuario"> | string
    nome?: StringWithAggregatesFilter<"Usuario"> | string
    email?: StringWithAggregatesFilter<"Usuario"> | string
    senha_hash?: StringWithAggregatesFilter<"Usuario"> | string
    data_cadastro?: DateTimeWithAggregatesFilter<"Usuario"> | Date | string
    ultimo_login?: DateTimeNullableWithAggregatesFilter<"Usuario"> | Date | string | null
  }

  export type SimulacaoWhereInput = {
    AND?: SimulacaoWhereInput | SimulacaoWhereInput[]
    OR?: SimulacaoWhereInput[]
    NOT?: SimulacaoWhereInput | SimulacaoWhereInput[]
    id_simulacao?: StringFilter<"Simulacao"> | string
    titulo?: StringFilter<"Simulacao"> | string
    parametros?: JsonFilter<"Simulacao">
    resultado?: JsonFilter<"Simulacao">
    data_execucao?: DateTimeFilter<"Simulacao"> | Date | string
    id_usuario?: StringFilter<"Simulacao"> | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    historico?: HistoricoSimulacaoListRelationFilter
  }

  export type SimulacaoOrderByWithRelationInput = {
    id_simulacao?: SortOrder
    titulo?: SortOrder
    parametros?: SortOrder
    resultado?: SortOrder
    data_execucao?: SortOrder
    id_usuario?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    historico?: HistoricoSimulacaoOrderByRelationAggregateInput
    _relevance?: SimulacaoOrderByRelevanceInput
  }

  export type SimulacaoWhereUniqueInput = Prisma.AtLeast<{
    id_simulacao?: string
    AND?: SimulacaoWhereInput | SimulacaoWhereInput[]
    OR?: SimulacaoWhereInput[]
    NOT?: SimulacaoWhereInput | SimulacaoWhereInput[]
    titulo?: StringFilter<"Simulacao"> | string
    parametros?: JsonFilter<"Simulacao">
    resultado?: JsonFilter<"Simulacao">
    data_execucao?: DateTimeFilter<"Simulacao"> | Date | string
    id_usuario?: StringFilter<"Simulacao"> | string
    usuario?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    historico?: HistoricoSimulacaoListRelationFilter
  }, "id_simulacao">

  export type SimulacaoOrderByWithAggregationInput = {
    id_simulacao?: SortOrder
    titulo?: SortOrder
    parametros?: SortOrder
    resultado?: SortOrder
    data_execucao?: SortOrder
    id_usuario?: SortOrder
    _count?: SimulacaoCountOrderByAggregateInput
    _max?: SimulacaoMaxOrderByAggregateInput
    _min?: SimulacaoMinOrderByAggregateInput
  }

  export type SimulacaoScalarWhereWithAggregatesInput = {
    AND?: SimulacaoScalarWhereWithAggregatesInput | SimulacaoScalarWhereWithAggregatesInput[]
    OR?: SimulacaoScalarWhereWithAggregatesInput[]
    NOT?: SimulacaoScalarWhereWithAggregatesInput | SimulacaoScalarWhereWithAggregatesInput[]
    id_simulacao?: StringWithAggregatesFilter<"Simulacao"> | string
    titulo?: StringWithAggregatesFilter<"Simulacao"> | string
    parametros?: JsonWithAggregatesFilter<"Simulacao">
    resultado?: JsonWithAggregatesFilter<"Simulacao">
    data_execucao?: DateTimeWithAggregatesFilter<"Simulacao"> | Date | string
    id_usuario?: StringWithAggregatesFilter<"Simulacao"> | string
  }

  export type HistoricoSimulacaoWhereInput = {
    AND?: HistoricoSimulacaoWhereInput | HistoricoSimulacaoWhereInput[]
    OR?: HistoricoSimulacaoWhereInput[]
    NOT?: HistoricoSimulacaoWhereInput | HistoricoSimulacaoWhereInput[]
    id_historico?: StringFilter<"HistoricoSimulacao"> | string
    acao?: StringFilter<"HistoricoSimulacao"> | string
    data_acao?: DateTimeFilter<"HistoricoSimulacao"> | Date | string
    detalhes?: StringNullableFilter<"HistoricoSimulacao"> | string | null
    id_simulacao?: StringFilter<"HistoricoSimulacao"> | string
    simulacao?: XOR<SimulacaoScalarRelationFilter, SimulacaoWhereInput>
  }

  export type HistoricoSimulacaoOrderByWithRelationInput = {
    id_historico?: SortOrder
    acao?: SortOrder
    data_acao?: SortOrder
    detalhes?: SortOrderInput | SortOrder
    id_simulacao?: SortOrder
    simulacao?: SimulacaoOrderByWithRelationInput
    _relevance?: HistoricoSimulacaoOrderByRelevanceInput
  }

  export type HistoricoSimulacaoWhereUniqueInput = Prisma.AtLeast<{
    id_historico?: string
    AND?: HistoricoSimulacaoWhereInput | HistoricoSimulacaoWhereInput[]
    OR?: HistoricoSimulacaoWhereInput[]
    NOT?: HistoricoSimulacaoWhereInput | HistoricoSimulacaoWhereInput[]
    acao?: StringFilter<"HistoricoSimulacao"> | string
    data_acao?: DateTimeFilter<"HistoricoSimulacao"> | Date | string
    detalhes?: StringNullableFilter<"HistoricoSimulacao"> | string | null
    id_simulacao?: StringFilter<"HistoricoSimulacao"> | string
    simulacao?: XOR<SimulacaoScalarRelationFilter, SimulacaoWhereInput>
  }, "id_historico">

  export type HistoricoSimulacaoOrderByWithAggregationInput = {
    id_historico?: SortOrder
    acao?: SortOrder
    data_acao?: SortOrder
    detalhes?: SortOrderInput | SortOrder
    id_simulacao?: SortOrder
    _count?: HistoricoSimulacaoCountOrderByAggregateInput
    _max?: HistoricoSimulacaoMaxOrderByAggregateInput
    _min?: HistoricoSimulacaoMinOrderByAggregateInput
  }

  export type HistoricoSimulacaoScalarWhereWithAggregatesInput = {
    AND?: HistoricoSimulacaoScalarWhereWithAggregatesInput | HistoricoSimulacaoScalarWhereWithAggregatesInput[]
    OR?: HistoricoSimulacaoScalarWhereWithAggregatesInput[]
    NOT?: HistoricoSimulacaoScalarWhereWithAggregatesInput | HistoricoSimulacaoScalarWhereWithAggregatesInput[]
    id_historico?: StringWithAggregatesFilter<"HistoricoSimulacao"> | string
    acao?: StringWithAggregatesFilter<"HistoricoSimulacao"> | string
    data_acao?: DateTimeWithAggregatesFilter<"HistoricoSimulacao"> | Date | string
    detalhes?: StringNullableWithAggregatesFilter<"HistoricoSimulacao"> | string | null
    id_simulacao?: StringWithAggregatesFilter<"HistoricoSimulacao"> | string
  }

  export type UsuarioCreateInput = {
    id_usuario?: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro?: Date | string
    ultimo_login?: Date | string | null
    simulacoes?: SimulacaoCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro?: Date | string
    ultimo_login?: Date | string | null
    simulacoes?: SimulacaoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUpdateInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulacoes?: SimulacaoUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    simulacoes?: SimulacaoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro?: Date | string
    ultimo_login?: Date | string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SimulacaoCreateInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    usuario: UsuarioCreateNestedOneWithoutSimulacoesInput
    historico?: HistoricoSimulacaoCreateNestedManyWithoutSimulacaoInput
  }

  export type SimulacaoUncheckedCreateInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    id_usuario: string
    historico?: HistoricoSimulacaoUncheckedCreateNestedManyWithoutSimulacaoInput
  }

  export type SimulacaoUpdateInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutSimulacoesNestedInput
    historico?: HistoricoSimulacaoUpdateManyWithoutSimulacaoNestedInput
  }

  export type SimulacaoUncheckedUpdateInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: StringFieldUpdateOperationsInput | string
    historico?: HistoricoSimulacaoUncheckedUpdateManyWithoutSimulacaoNestedInput
  }

  export type SimulacaoCreateManyInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    id_usuario: string
  }

  export type SimulacaoUpdateManyMutationInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SimulacaoUncheckedUpdateManyInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: StringFieldUpdateOperationsInput | string
  }

  export type HistoricoSimulacaoCreateInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
    simulacao: SimulacaoCreateNestedOneWithoutHistoricoInput
  }

  export type HistoricoSimulacaoUncheckedCreateInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
    id_simulacao: string
  }

  export type HistoricoSimulacaoUpdateInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
    simulacao?: SimulacaoUpdateOneRequiredWithoutHistoricoNestedInput
  }

  export type HistoricoSimulacaoUncheckedUpdateInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
    id_simulacao?: StringFieldUpdateOperationsInput | string
  }

  export type HistoricoSimulacaoCreateManyInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
    id_simulacao: string
  }

  export type HistoricoSimulacaoUpdateManyMutationInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoricoSimulacaoUncheckedUpdateManyInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
    id_simulacao?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SimulacaoListRelationFilter = {
    every?: SimulacaoWhereInput
    some?: SimulacaoWhereInput
    none?: SimulacaoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SimulacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioOrderByRelevanceInput = {
    fields: UsuarioOrderByRelevanceFieldEnum | UsuarioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    data_cadastro?: SortOrder
    ultimo_login?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    data_cadastro?: SortOrder
    ultimo_login?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha_hash?: SortOrder
    data_cadastro?: SortOrder
    ultimo_login?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type HistoricoSimulacaoListRelationFilter = {
    every?: HistoricoSimulacaoWhereInput
    some?: HistoricoSimulacaoWhereInput
    none?: HistoricoSimulacaoWhereInput
  }

  export type HistoricoSimulacaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SimulacaoOrderByRelevanceInput = {
    fields: SimulacaoOrderByRelevanceFieldEnum | SimulacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SimulacaoCountOrderByAggregateInput = {
    id_simulacao?: SortOrder
    titulo?: SortOrder
    parametros?: SortOrder
    resultado?: SortOrder
    data_execucao?: SortOrder
    id_usuario?: SortOrder
  }

  export type SimulacaoMaxOrderByAggregateInput = {
    id_simulacao?: SortOrder
    titulo?: SortOrder
    data_execucao?: SortOrder
    id_usuario?: SortOrder
  }

  export type SimulacaoMinOrderByAggregateInput = {
    id_simulacao?: SortOrder
    titulo?: SortOrder
    data_execucao?: SortOrder
    id_usuario?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SimulacaoScalarRelationFilter = {
    is?: SimulacaoWhereInput
    isNot?: SimulacaoWhereInput
  }

  export type HistoricoSimulacaoOrderByRelevanceInput = {
    fields: HistoricoSimulacaoOrderByRelevanceFieldEnum | HistoricoSimulacaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type HistoricoSimulacaoCountOrderByAggregateInput = {
    id_historico?: SortOrder
    acao?: SortOrder
    data_acao?: SortOrder
    detalhes?: SortOrder
    id_simulacao?: SortOrder
  }

  export type HistoricoSimulacaoMaxOrderByAggregateInput = {
    id_historico?: SortOrder
    acao?: SortOrder
    data_acao?: SortOrder
    detalhes?: SortOrder
    id_simulacao?: SortOrder
  }

  export type HistoricoSimulacaoMinOrderByAggregateInput = {
    id_historico?: SortOrder
    acao?: SortOrder
    data_acao?: SortOrder
    detalhes?: SortOrder
    id_simulacao?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type SimulacaoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput> | SimulacaoCreateWithoutUsuarioInput[] | SimulacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacaoCreateOrConnectWithoutUsuarioInput | SimulacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: SimulacaoCreateManyUsuarioInputEnvelope
    connect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
  }

  export type SimulacaoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput> | SimulacaoCreateWithoutUsuarioInput[] | SimulacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacaoCreateOrConnectWithoutUsuarioInput | SimulacaoCreateOrConnectWithoutUsuarioInput[]
    createMany?: SimulacaoCreateManyUsuarioInputEnvelope
    connect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type SimulacaoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput> | SimulacaoCreateWithoutUsuarioInput[] | SimulacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacaoCreateOrConnectWithoutUsuarioInput | SimulacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: SimulacaoUpsertWithWhereUniqueWithoutUsuarioInput | SimulacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: SimulacaoCreateManyUsuarioInputEnvelope
    set?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    disconnect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    delete?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    connect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    update?: SimulacaoUpdateWithWhereUniqueWithoutUsuarioInput | SimulacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: SimulacaoUpdateManyWithWhereWithoutUsuarioInput | SimulacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: SimulacaoScalarWhereInput | SimulacaoScalarWhereInput[]
  }

  export type SimulacaoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput> | SimulacaoCreateWithoutUsuarioInput[] | SimulacaoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: SimulacaoCreateOrConnectWithoutUsuarioInput | SimulacaoCreateOrConnectWithoutUsuarioInput[]
    upsert?: SimulacaoUpsertWithWhereUniqueWithoutUsuarioInput | SimulacaoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: SimulacaoCreateManyUsuarioInputEnvelope
    set?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    disconnect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    delete?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    connect?: SimulacaoWhereUniqueInput | SimulacaoWhereUniqueInput[]
    update?: SimulacaoUpdateWithWhereUniqueWithoutUsuarioInput | SimulacaoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: SimulacaoUpdateManyWithWhereWithoutUsuarioInput | SimulacaoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: SimulacaoScalarWhereInput | SimulacaoScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutSimulacoesInput = {
    create?: XOR<UsuarioCreateWithoutSimulacoesInput, UsuarioUncheckedCreateWithoutSimulacoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSimulacoesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type HistoricoSimulacaoCreateNestedManyWithoutSimulacaoInput = {
    create?: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput> | HistoricoSimulacaoCreateWithoutSimulacaoInput[] | HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput[]
    connectOrCreate?: HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput | HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput[]
    createMany?: HistoricoSimulacaoCreateManySimulacaoInputEnvelope
    connect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
  }

  export type HistoricoSimulacaoUncheckedCreateNestedManyWithoutSimulacaoInput = {
    create?: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput> | HistoricoSimulacaoCreateWithoutSimulacaoInput[] | HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput[]
    connectOrCreate?: HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput | HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput[]
    createMany?: HistoricoSimulacaoCreateManySimulacaoInputEnvelope
    connect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
  }

  export type UsuarioUpdateOneRequiredWithoutSimulacoesNestedInput = {
    create?: XOR<UsuarioCreateWithoutSimulacoesInput, UsuarioUncheckedCreateWithoutSimulacoesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutSimulacoesInput
    upsert?: UsuarioUpsertWithoutSimulacoesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutSimulacoesInput, UsuarioUpdateWithoutSimulacoesInput>, UsuarioUncheckedUpdateWithoutSimulacoesInput>
  }

  export type HistoricoSimulacaoUpdateManyWithoutSimulacaoNestedInput = {
    create?: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput> | HistoricoSimulacaoCreateWithoutSimulacaoInput[] | HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput[]
    connectOrCreate?: HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput | HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput[]
    upsert?: HistoricoSimulacaoUpsertWithWhereUniqueWithoutSimulacaoInput | HistoricoSimulacaoUpsertWithWhereUniqueWithoutSimulacaoInput[]
    createMany?: HistoricoSimulacaoCreateManySimulacaoInputEnvelope
    set?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    disconnect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    delete?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    connect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    update?: HistoricoSimulacaoUpdateWithWhereUniqueWithoutSimulacaoInput | HistoricoSimulacaoUpdateWithWhereUniqueWithoutSimulacaoInput[]
    updateMany?: HistoricoSimulacaoUpdateManyWithWhereWithoutSimulacaoInput | HistoricoSimulacaoUpdateManyWithWhereWithoutSimulacaoInput[]
    deleteMany?: HistoricoSimulacaoScalarWhereInput | HistoricoSimulacaoScalarWhereInput[]
  }

  export type HistoricoSimulacaoUncheckedUpdateManyWithoutSimulacaoNestedInput = {
    create?: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput> | HistoricoSimulacaoCreateWithoutSimulacaoInput[] | HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput[]
    connectOrCreate?: HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput | HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput[]
    upsert?: HistoricoSimulacaoUpsertWithWhereUniqueWithoutSimulacaoInput | HistoricoSimulacaoUpsertWithWhereUniqueWithoutSimulacaoInput[]
    createMany?: HistoricoSimulacaoCreateManySimulacaoInputEnvelope
    set?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    disconnect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    delete?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    connect?: HistoricoSimulacaoWhereUniqueInput | HistoricoSimulacaoWhereUniqueInput[]
    update?: HistoricoSimulacaoUpdateWithWhereUniqueWithoutSimulacaoInput | HistoricoSimulacaoUpdateWithWhereUniqueWithoutSimulacaoInput[]
    updateMany?: HistoricoSimulacaoUpdateManyWithWhereWithoutSimulacaoInput | HistoricoSimulacaoUpdateManyWithWhereWithoutSimulacaoInput[]
    deleteMany?: HistoricoSimulacaoScalarWhereInput | HistoricoSimulacaoScalarWhereInput[]
  }

  export type SimulacaoCreateNestedOneWithoutHistoricoInput = {
    create?: XOR<SimulacaoCreateWithoutHistoricoInput, SimulacaoUncheckedCreateWithoutHistoricoInput>
    connectOrCreate?: SimulacaoCreateOrConnectWithoutHistoricoInput
    connect?: SimulacaoWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type SimulacaoUpdateOneRequiredWithoutHistoricoNestedInput = {
    create?: XOR<SimulacaoCreateWithoutHistoricoInput, SimulacaoUncheckedCreateWithoutHistoricoInput>
    connectOrCreate?: SimulacaoCreateOrConnectWithoutHistoricoInput
    upsert?: SimulacaoUpsertWithoutHistoricoInput
    connect?: SimulacaoWhereUniqueInput
    update?: XOR<XOR<SimulacaoUpdateToOneWithWhereWithoutHistoricoInput, SimulacaoUpdateWithoutHistoricoInput>, SimulacaoUncheckedUpdateWithoutHistoricoInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type SimulacaoCreateWithoutUsuarioInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    historico?: HistoricoSimulacaoCreateNestedManyWithoutSimulacaoInput
  }

  export type SimulacaoUncheckedCreateWithoutUsuarioInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    historico?: HistoricoSimulacaoUncheckedCreateNestedManyWithoutSimulacaoInput
  }

  export type SimulacaoCreateOrConnectWithoutUsuarioInput = {
    where: SimulacaoWhereUniqueInput
    create: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type SimulacaoCreateManyUsuarioInputEnvelope = {
    data: SimulacaoCreateManyUsuarioInput | SimulacaoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type SimulacaoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: SimulacaoWhereUniqueInput
    update: XOR<SimulacaoUpdateWithoutUsuarioInput, SimulacaoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<SimulacaoCreateWithoutUsuarioInput, SimulacaoUncheckedCreateWithoutUsuarioInput>
  }

  export type SimulacaoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: SimulacaoWhereUniqueInput
    data: XOR<SimulacaoUpdateWithoutUsuarioInput, SimulacaoUncheckedUpdateWithoutUsuarioInput>
  }

  export type SimulacaoUpdateManyWithWhereWithoutUsuarioInput = {
    where: SimulacaoScalarWhereInput
    data: XOR<SimulacaoUpdateManyMutationInput, SimulacaoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type SimulacaoScalarWhereInput = {
    AND?: SimulacaoScalarWhereInput | SimulacaoScalarWhereInput[]
    OR?: SimulacaoScalarWhereInput[]
    NOT?: SimulacaoScalarWhereInput | SimulacaoScalarWhereInput[]
    id_simulacao?: StringFilter<"Simulacao"> | string
    titulo?: StringFilter<"Simulacao"> | string
    parametros?: JsonFilter<"Simulacao">
    resultado?: JsonFilter<"Simulacao">
    data_execucao?: DateTimeFilter<"Simulacao"> | Date | string
    id_usuario?: StringFilter<"Simulacao"> | string
  }

  export type UsuarioCreateWithoutSimulacoesInput = {
    id_usuario?: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro?: Date | string
    ultimo_login?: Date | string | null
  }

  export type UsuarioUncheckedCreateWithoutSimulacoesInput = {
    id_usuario?: string
    nome: string
    email: string
    senha_hash: string
    data_cadastro?: Date | string
    ultimo_login?: Date | string | null
  }

  export type UsuarioCreateOrConnectWithoutSimulacoesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutSimulacoesInput, UsuarioUncheckedCreateWithoutSimulacoesInput>
  }

  export type HistoricoSimulacaoCreateWithoutSimulacaoInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
  }

  export type HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
  }

  export type HistoricoSimulacaoCreateOrConnectWithoutSimulacaoInput = {
    where: HistoricoSimulacaoWhereUniqueInput
    create: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput>
  }

  export type HistoricoSimulacaoCreateManySimulacaoInputEnvelope = {
    data: HistoricoSimulacaoCreateManySimulacaoInput | HistoricoSimulacaoCreateManySimulacaoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutSimulacoesInput = {
    update: XOR<UsuarioUpdateWithoutSimulacoesInput, UsuarioUncheckedUpdateWithoutSimulacoesInput>
    create: XOR<UsuarioCreateWithoutSimulacoesInput, UsuarioUncheckedCreateWithoutSimulacoesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutSimulacoesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutSimulacoesInput, UsuarioUncheckedUpdateWithoutSimulacoesInput>
  }

  export type UsuarioUpdateWithoutSimulacoesInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsuarioUncheckedUpdateWithoutSimulacoesInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha_hash?: StringFieldUpdateOperationsInput | string
    data_cadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    ultimo_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HistoricoSimulacaoUpsertWithWhereUniqueWithoutSimulacaoInput = {
    where: HistoricoSimulacaoWhereUniqueInput
    update: XOR<HistoricoSimulacaoUpdateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedUpdateWithoutSimulacaoInput>
    create: XOR<HistoricoSimulacaoCreateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedCreateWithoutSimulacaoInput>
  }

  export type HistoricoSimulacaoUpdateWithWhereUniqueWithoutSimulacaoInput = {
    where: HistoricoSimulacaoWhereUniqueInput
    data: XOR<HistoricoSimulacaoUpdateWithoutSimulacaoInput, HistoricoSimulacaoUncheckedUpdateWithoutSimulacaoInput>
  }

  export type HistoricoSimulacaoUpdateManyWithWhereWithoutSimulacaoInput = {
    where: HistoricoSimulacaoScalarWhereInput
    data: XOR<HistoricoSimulacaoUpdateManyMutationInput, HistoricoSimulacaoUncheckedUpdateManyWithoutSimulacaoInput>
  }

  export type HistoricoSimulacaoScalarWhereInput = {
    AND?: HistoricoSimulacaoScalarWhereInput | HistoricoSimulacaoScalarWhereInput[]
    OR?: HistoricoSimulacaoScalarWhereInput[]
    NOT?: HistoricoSimulacaoScalarWhereInput | HistoricoSimulacaoScalarWhereInput[]
    id_historico?: StringFilter<"HistoricoSimulacao"> | string
    acao?: StringFilter<"HistoricoSimulacao"> | string
    data_acao?: DateTimeFilter<"HistoricoSimulacao"> | Date | string
    detalhes?: StringNullableFilter<"HistoricoSimulacao"> | string | null
    id_simulacao?: StringFilter<"HistoricoSimulacao"> | string
  }

  export type SimulacaoCreateWithoutHistoricoInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    usuario: UsuarioCreateNestedOneWithoutSimulacoesInput
  }

  export type SimulacaoUncheckedCreateWithoutHistoricoInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
    id_usuario: string
  }

  export type SimulacaoCreateOrConnectWithoutHistoricoInput = {
    where: SimulacaoWhereUniqueInput
    create: XOR<SimulacaoCreateWithoutHistoricoInput, SimulacaoUncheckedCreateWithoutHistoricoInput>
  }

  export type SimulacaoUpsertWithoutHistoricoInput = {
    update: XOR<SimulacaoUpdateWithoutHistoricoInput, SimulacaoUncheckedUpdateWithoutHistoricoInput>
    create: XOR<SimulacaoCreateWithoutHistoricoInput, SimulacaoUncheckedCreateWithoutHistoricoInput>
    where?: SimulacaoWhereInput
  }

  export type SimulacaoUpdateToOneWithWhereWithoutHistoricoInput = {
    where?: SimulacaoWhereInput
    data: XOR<SimulacaoUpdateWithoutHistoricoInput, SimulacaoUncheckedUpdateWithoutHistoricoInput>
  }

  export type SimulacaoUpdateWithoutHistoricoInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UsuarioUpdateOneRequiredWithoutSimulacoesNestedInput
  }

  export type SimulacaoUncheckedUpdateWithoutHistoricoInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    id_usuario?: StringFieldUpdateOperationsInput | string
  }

  export type SimulacaoCreateManyUsuarioInput = {
    id_simulacao?: string
    titulo: string
    parametros: JsonNullValueInput | InputJsonValue
    resultado: JsonNullValueInput | InputJsonValue
    data_execucao?: Date | string
  }

  export type SimulacaoUpdateWithoutUsuarioInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    historico?: HistoricoSimulacaoUpdateManyWithoutSimulacaoNestedInput
  }

  export type SimulacaoUncheckedUpdateWithoutUsuarioInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
    historico?: HistoricoSimulacaoUncheckedUpdateManyWithoutSimulacaoNestedInput
  }

  export type SimulacaoUncheckedUpdateManyWithoutUsuarioInput = {
    id_simulacao?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    parametros?: JsonNullValueInput | InputJsonValue
    resultado?: JsonNullValueInput | InputJsonValue
    data_execucao?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistoricoSimulacaoCreateManySimulacaoInput = {
    id_historico?: string
    acao: string
    data_acao?: Date | string
    detalhes?: string | null
  }

  export type HistoricoSimulacaoUpdateWithoutSimulacaoInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoricoSimulacaoUncheckedUpdateWithoutSimulacaoInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HistoricoSimulacaoUncheckedUpdateManyWithoutSimulacaoInput = {
    id_historico?: StringFieldUpdateOperationsInput | string
    acao?: StringFieldUpdateOperationsInput | string
    data_acao?: DateTimeFieldUpdateOperationsInput | Date | string
    detalhes?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}